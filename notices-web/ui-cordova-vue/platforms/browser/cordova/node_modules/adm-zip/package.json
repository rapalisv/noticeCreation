{
  "_from": "adm-zip@>=0.4.7 <0.5.0",
  "_id": "adm-zip@0.4.7",
  "_location": "/cordova-browser/adm-zip",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "cthackers",
    "email": "iacob.campia@gmail.com"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requiredBy": [
    "/cordova-browser"
  ],
  "_resolved": "https://registry.npmjs.org/adm-zip/-/adm-zip-0.4.7.tgz",
  "_shasum": "8606c2cbf1c426ce8c8ec00174447fd49b6eafc1",
  "_shrinkwrap": null,
  "author": {
    "name": "Nasca Iacob",
    "email": "sy@another-d-mention.ro",
    "url": "https://github.com/cthackers"
  },
  "bugs": {
    "url": "https://github.com/cthackers/adm-zip/issues",
    "email": "sy@another-d-mention.ro"
  },
  "dependencies": {},
  "description": "A Javascript implementation of zip for nodejs. Allows user to create or extract zip files both in memory or to/from disk",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "8606c2cbf1c426ce8c8ec00174447fd49b6eafc1",
    "tarball": "http://registry.npmjs.org/adm-zip/-/adm-zip-0.4.7.tgz"
  },
  "engines": {
    "node": ">=0.3.0"
  },
  "files": [
    "adm-zip.js",
    "headers",
    "methods",
    "util",
    "zipEntry.js",
    "zipFile.js"
  ],
  "gitHead": "6708a3e5788ff9e67ddba288397f7788a5c02855",
  "homepage": "http://github.com/cthackers/adm-zip",
  "keywords": [
    "zip",
    "methods",
    "archive",
    "unzip"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/cthackers/adm-zip/master/MIT-LICENSE.txt"
    }
  ],
  "main": "adm-zip.js",
  "maintainers": [
    {
      "name": "cthackers",
      "email": "sy@another-d-mention.ro"
    }
  ],
  "name": "adm-zip",
  "optionalDependencies": {},
  "readme": "# ADM-ZIP for NodeJS\n\nADM-ZIP is a pure JavaScript implementation for zip data compression for [NodeJS](http://nodejs.org/). \n\n# Installation\n\nWith [npm](http://npmjs.org) do:\n\n    $ npm install adm-zip\n\t\n## What is it good for?\nThe library allows you to:\n\n* decompress zip files directly to disk or in memory buffers\n* compress files and store them to disk in .zip format or in compressed buffers\n* update content of/add new/delete files from an existing .zip\n\n# Dependencies\nThere are no other nodeJS libraries that ADM-ZIP is dependent of\n\n# Examples\n\n## Basic usage\n```javascript\n\n\tvar AdmZip = require('adm-zip');\n\n\t// reading archives\n\tvar zip = new AdmZip(\"./my_file.zip\");\n\tvar zipEntries = zip.getEntries(); // an array of ZipEntry records\n\n\tzipEntries.forEach(function(zipEntry) {\n\t    console.log(zipEntry.toString()); // outputs zip entries information\n\t\tif (zipEntry.entryName == \"my_file.txt\") {\n\t\t     console.log(zipEntry.data.toString('utf8')); \n\t\t}\n\t});\n\t// outputs the content of some_folder/my_file.txt\n\tconsole.log(zip.readAsText(\"some_folder/my_file.txt\")); \n\t// extracts the specified file to the specified location\n\tzip.extractEntryTo(/*entry name*/\"some_folder/my_file.txt\", /*target path*/\"/home/me/tempfolder\", /*maintainEntryPath*/false, /*overwrite*/true);\n\t// extracts everything\n\tzip.extractAllTo(/*target path*/\"/home/me/zipcontent/\", /*overwrite*/true);\n\t\n\t\n\t// creating archives\n\tvar zip = new AdmZip();\n\t\n\t// add file directly\n\tzip.addFile(\"test.txt\", new Buffer(\"inner content of the file\"), \"entry comment goes here\");\n\t// add local file\n\tzip.addLocalFile(\"/home/me/some_picture.png\");\n\t// get everything as a buffer\n\tvar willSendthis = zip.toBuffer();\n\t// or write everything to disk\n\tzip.writeZip(/*target file name*/\"/home/me/files.zip\");\n\t\n\t\n\t// ... more examples in the wiki\n```\n\nFor more detailed information please check out the [wiki](https://github.com/cthackers/adm-zip/wiki).\n\n[![build status](https://secure.travis-ci.org/cthackers/adm-zip.png)](http://travis-ci.org/cthackers/adm-zip)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cthackers/adm-zip.git"
  },
  "scripts": {},
  "version": "0.4.7"
}
